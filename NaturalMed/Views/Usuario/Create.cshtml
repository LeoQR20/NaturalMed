@model Infraestructura.Models.Usuario

@{
    ViewBag.Title = "Create";
}

<h2>Nuevo Usuario</h2>

@using (Html.BeginForm("Save", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Usuario</h4>
    <a class="btn btn-default" href="/Usuario/ListaUsuario" role="button" style="background-color:#0d4456; color:white; float:right">Regresar a la Lista</a>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-6">
        @Html.LabelFor(model => model.IDRole, "Rol", htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-10">
            @Html.DropDownList("IDRol", new SelectList(ViewBag.ListaTipos, "IDRol", "Descripcion"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IDRole, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group col-md-12">
        <div class="col-md-offset-2 col-md-10">
            <input onclick="passwordValidate()" type="submit" value="Crear Usuario" class="btn btn-default btn-success" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function passwordValidate() {
            if (document.getElementById("Confirmar").value != document.getElementById("Contrasenia").value) {
                alert("Las contraseñas no coinciden");
                event.preventDefault();
            }
        }
    </script>
    <script>
        $(document).ready(function () {
            $('#mensaje').hide();
        });
        var cambioDePass = function () {
            var cont = $('#Contrasenia').val();
            var cont2 = $('#Confirmar').val();
            if (cont == cont2) {
                $('#mensaje').hide();
                $('#mensaje').show();
                $('#mensaje').html("");
            } else {
                $('#mensaje').html("Las constraseñas no coinciden");
                $('#mensaje').show();
            }
        }
        $("#Contrasenia").on('keyup', cambioDePass);
        $("#Confirmar").on('keyup', cambioDePass);
    </script>
}