@model Infraestructura.Models.Usuario

@{
    ViewBag.Title = "Nuevo Usuario";
}

<h2>Nuevo Empleado</h2>


@using (Html.BeginForm("Save", "Usuario", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal form-row">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.IDRole, "Rol", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.DropDownList("IdRol", new SelectList(ViewBag.ListaTipos, "Id", "Descripcion"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDRole, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-12">
            <div class="col-md-offset-2 col-md-10">
                <input onclick="passwordValidate()" type="submit" value="Crear Usuario" class="btn btn-default btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function passwordValidate() {
            if (document.getElementById("Confirmar").value != document.getElementById("Password").value) {
                alert("Las contraseñas no coinciden");
                event.preventDefault();
            }
        }
    </script>

    <script>
        $(document).ready(function () {
            $('#mensaje').hide();
        });

        var cambioDePass = function () {
            var cont = $('#Password').val();
            var cont2 = $('#Confirmar').val();
            if (cont == cont2) {
                $('#mensaje').hide();
                $('#mensaje').show();
                $('#mensaje').html("");
            } else {
                $('#mensaje').html("Las constraseñas no coinciden");
                $('#mensaje').show();
            }
        }

        $("#Password").on('keyup', cambioDePass);
        $("#Password").on('keyup', cambioDePass);

    </script>
}

